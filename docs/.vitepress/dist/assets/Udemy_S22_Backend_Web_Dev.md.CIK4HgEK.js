import{_ as e,c as a,o as t,a2 as n}from"./chunks/framework.Butr-cWb.js";const o="/webdev.notes/assets/image-30.BGxIC7ep.png",r="/webdev.notes/assets/image-31.CcZ9Cbbv.png",s="/webdev.notes/assets/image-32.fEXtVIIN.png",i="/webdev.notes/assets/image-33.pzG4TEc0.png",d="/webdev.notes/assets/image-34.BoA89O8n.png",g=JSON.parse('{"title":"Backened Dev","description":"","frontmatter":{},"headers":[],"relativePath":"Udemy/S22_Backend_Web_Dev.md","filePath":"Udemy/S22_Backend_Web_Dev.md"}'),l={name:"Udemy/S22_Backend_Web_Dev.md"},h=n('<h1 id="backened-dev" tabindex="-1">Backened Dev <a class="header-anchor" href="#backened-dev" aria-label="Permalink to &quot;Backened Dev&quot;">​</a></h1><h2 id="_191-backend-web-development-explained" tabindex="-1">191. Backend Web Development Explained <a class="header-anchor" href="#_191-backend-web-development-explained" aria-label="Permalink to &quot;191. Backend Web Development Explained&quot;">​</a></h2><p><img src="'+o+'" alt="frontendVSbackend"></p><h2 id="has-3-compponents" tabindex="-1">Has 3 compponents: <a class="header-anchor" href="#has-3-compponents" aria-label="Permalink to &quot;Has 3 compponents:&quot;">​</a></h2><h3 id="_1-server" tabindex="-1">1. Server <a class="header-anchor" href="#_1-server" aria-label="Permalink to &quot;1. Server&quot;">​</a></h3><h3 id="_2-application" tabindex="-1">2. Application <a class="header-anchor" href="#_2-application" aria-label="Permalink to &quot;2. Application&quot;">​</a></h3><h3 id="_3-backened" tabindex="-1">3. Backened <a class="header-anchor" href="#_3-backened" aria-label="Permalink to &quot;3. Backened&quot;">​</a></h3><hr><h2 id="_1-server-1" tabindex="-1">1. Server <a class="header-anchor" href="#_1-server-1" aria-label="Permalink to &quot;1. Server&quot;">​</a></h2><h3 id="a-computer-that-listens-to-incoming-requests" tabindex="-1">A computer that listens to incoming requests <a class="header-anchor" href="#a-computer-that-listens-to-incoming-requests" aria-label="Permalink to &quot;A computer that listens to incoming requests&quot;">​</a></h3><h3 id="supposed-to-bw-on-24-7" tabindex="-1">supposed to bw ON 24/7 <a class="header-anchor" href="#supposed-to-bw-on-24-7" aria-label="Permalink to &quot;supposed to bw ON 24/7&quot;">​</a></h3><h2 id="_2-appilication" tabindex="-1">2. Appilication <a class="header-anchor" href="#_2-appilication" aria-label="Permalink to &quot;2. Appilication&quot;">​</a></h2><h3 id="the-logic" tabindex="-1">- The logic <a class="header-anchor" href="#the-logic" aria-label="Permalink to &quot;- The logic&quot;">​</a></h3><h3 id="responds-to-requests-and-does-the-job" tabindex="-1">- Responds to requests and does the job <a class="header-anchor" href="#responds-to-requests-and-does-the-job" aria-label="Permalink to &quot;- Responds to requests and does the job&quot;">​</a></h3><h3 id="sends-error-if-request-in-invalid" tabindex="-1">- sends error if request in invalid <a class="header-anchor" href="#sends-error-if-request-in-invalid" aria-label="Permalink to &quot;- sends error if request in invalid&quot;">​</a></h3><h2 id="_3-database" tabindex="-1">3. Database <a class="header-anchor" href="#_3-database" aria-label="Permalink to &quot;3. Database&quot;">​</a></h2><h3 id="stores-your-data" tabindex="-1">- Stores your data <a class="header-anchor" href="#stores-your-data" aria-label="Permalink to &quot;- Stores your data&quot;">​</a></h3><h2 id="webpage-vs-webpage" tabindex="-1">Webpage vs webpage: <a class="header-anchor" href="#webpage-vs-webpage" aria-label="Permalink to &quot;Webpage vs webpage:&quot;">​</a></h2><p><img src="'+r+'" alt="webpage"></p><h3 id="has-no-app-or-database" tabindex="-1">- Has no app or database <a class="header-anchor" href="#has-no-app-or-database" aria-label="Permalink to &quot;- Has no app or database&quot;">​</a></h3><p><img src="'+s+'" alt="Alt text"></p><h2 id="_192-backend-tools-and-technologies-which-one-to-learn" tabindex="-1">192. Backend Tools and Technologies - Which one to learn? <a class="header-anchor" href="#_192-backend-tools-and-technologies-which-one-to-learn" aria-label="Permalink to &quot;192. Backend Tools and Technologies - Which one to learn?&quot;">​</a></h2><h3 id="front-end-can-only-be-in-html-css-and-js" tabindex="-1">- Front end can only be in HTML, CSS and JS <a class="header-anchor" href="#front-end-can-only-be-in-html-css-and-js" aria-label="Permalink to &quot;- Front end can only be in HTML, CSS and JS&quot;">​</a></h3><h3 id="backened-can-be-written-in-many-different-prog-languages" tabindex="-1">- Backened can be written in many different prog languages <a class="header-anchor" href="#backened-can-be-written-in-many-different-prog-languages" aria-label="Permalink to &quot;- Backened can be written in many different prog languages&quot;">​</a></h3><p><img src="'+i+'" alt="front-backend-comparison"></p><h3 id="nodejs-is-the-number-1-most-popular-frameworks" tabindex="-1">- NodeJS is the number 1 most popular frameworks: <a class="header-anchor" href="#nodejs-is-the-number-1-most-popular-frameworks" aria-label="Permalink to &quot;- NodeJS is the number 1 most popular frameworks:&quot;">​</a></h3><p><img src="'+d+'" alt="Alt text"></p>',27),c=[h];function p(b,m,u,_,k,q){return t(),a("div",null,c)}const v=e(l,[["render",p]]);export{g as __pageData,v as default};
